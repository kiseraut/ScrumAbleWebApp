@using System.Collections
@using System.Diagnostics.CodeAnalysis
@using ScrumAble.Areas.Identity.Data
@attribute [ExcludeFromCodeCoverage]
@{
}

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.load('current', { 'packages': ['bar'] });

    google.charts.setOnLoadCallback(BurndownChart);
    google.charts.setOnLoadCallback(VelocityChart);

    function BurndownChart() {

        var data = google.visualization.arrayToDataTable([
            ['Date', 'Planned', 'Actual'],

            @{
                var line = "";
                var isfirst = true;

                if (ViewBag.BurndownData != null)
                {
                    foreach (Hashtable datapoint in ViewBag.BurndownData)
                    {
                        if (!isfirst)
                        {
                            @Html.Raw(",")
                        }
                        isfirst = false;
                        var Actual = datapoint["actual"] == "null" ? "null" : datapoint["actual"];

                        line = String.Format("['{0}',{1},{2}]", datapoint["date"], float.Parse(datapoint["planned"].ToString()), Actual);
                        @Html.Raw(line)
                    }
                }
                else
                {
                    @Html.Raw(String.Format("['{0}',0,0]",DateTime.Now.ToString("d")))
                }
            }

        ]);

        var options = {
            curveType: 'none',
            legend: { position: 'bottom' },
            chartArea: {
                width: '90%'
            }

        };

        var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));
        chart.draw(data, options);
    }

    function VelocityChart() {
        var data = google.visualization.arrayToDataTable([
            ['Sprint', 'Planned', 'Actual'],

            @{
                line = "";
                isfirst = true;

                if (ViewBag.VelocityData != null)
                {
                    foreach (Hashtable datapoint in ViewBag.VelocityData)
                    {
                        if (!isfirst)
                        {
                            @Html.Raw(",")
                        }
                        isfirst = false;
                        //var Actual = datapoint["actual"] == "null" ? "null" : datapoint["actual"];

                        line = String.Format("['{0}',{1},{2}]", datapoint["sprintName"], datapoint["planned"], datapoint["actual"]);
                        @Html.Raw(line)
                    }
                }
                else
                {
                    @Html.Raw("['No Data',0,0]")
                }
            }
        ]);

        var options = {
            titleTextStyle: {
                color: 'black',
                fontSize: '15px',
                bold: false,
                italic: false
            }
        };

        var chart = new google.charts.Bar(document.getElementById('columnchart_material'));
        chart.draw(data, google.charts.Bar.convertOptions(options));
    }

</script>
<h2>@ViewBag.SprintName Burndown</h2>
<div id="curve_chart" style="width: 800px; height: 400px"><h3>Loading...</h3></div>

<br />
<br />
<br />
<h2>@ViewBag.ReleaseName Velocity</h2>
<br />
<div id="columnchart_material" style="width: 800px; height: 500px;"><h3>Loading...</h3></div>

